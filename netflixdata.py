# -*- coding: utf-8 -*-
"""NetflixData.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WXOBSBfOwaf_X8BRfdEkaeHgclYLFuJF
"""

from google.colab import drive
drive.mount("/content/drive/")

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

# Importing the data from a csv file to a DataFrame
df = pd.read_csv("/content/drive/MyDrive/NetflixData.csv")
# Showing the first five values of the DataFrame
df.head()

# Let's check the status of the data
df.info()

df.describe()

# Checking if there are any duplicates
df.duplicated().value_counts()

df.groupby('duration').count().sort_values(by='show_id',ascending=False)

# Let's perform a basic visual analysis of the data.
# pd.set_option('display.max_rows', 220)
df.groupby('duration').count().sort_values(by='show_id',ascending=False)

# Before cleaning, lets make a copy of the dataframe.
df_clean = df.copy()

df_clean.date_added = pd.to_datetime(df_clean.date_added)

df_clean.info()

df_clean['listed_in1'] = 0
df_clean['listed_in2'] = 0
df_clean['listed_in3'] = 0
temp_cat = df_clean.listed_in.str.split(',')
i=0
for i in range (8790):
    t_cat = temp_cat[i]
    if len(t_cat) == 1:
        df_clean['listed_in1'][i] = temp_cat[i][0]
        df_clean['listed_in2'][i] = 0
        df_clean['listed_in3'][i] = 0
    if len(t_cat) == 2:
        df_clean['listed_in1'][i] = temp_cat[i][0]
        df_clean['listed_in2'][i] = temp_cat[i][1]
        df_clean['listed_in3'][i] = 0
    if len(t_cat) == 3:
        df_clean['listed_in1'][i] = temp_cat[i][0]
        df_clean['listed_in2'][i] = temp_cat[i][1]
        df_clean['listed_in3'][i] = temp_cat[i][2]

df_clean

df_tv = df_clean[df_clean.type == 'TV Show']
df_movie = df_clean[df_clean.type == 'Movie']

df_tv.head()

df_movie.head()

temp_dur = df_tv.duration.str.split(' ',expand=True)
df_tv['duration_seasons'] = temp_dur[0]
df_tv.duration_seasons = pd.to_numeric(df_tv.duration_seasons)

temp_dur = df_movie.duration.str.split(' ',expand=True)
df_movie['duration_minutes'] = temp_dur[0]
df_movie.duration_minutes = pd.to_numeric(df_movie.duration_minutes)

df_tv.head()

df_movie.head()

df_clean.to_csv('Netflix_DF_cleaned.csv')
df_tv.to_csv('Netflix_TV_cleaned.csv')
df_movie.to_csv('Netflix_Movie_cleaned.csv')

# Considering there are too many countries, we will limit our study to just the top 10 countries.
plt.figure(figsize=[20,10])
base_color = sns.color_palette('coolwarm',n_colors=5)
tv_movie = sns.countplot(x=df_clean.date_added.dt.year, data=df_clean, hue='type', palette = base_color)
tv_movie.set_title("Number of TV Shows and Movies Netflix has released per Year",fontsize = 20)
tv_movie.set_xlabel('Year',fontsize = 15)
tv_movie.set_ylabel('Number of Movies/TV Shows',fontsize = 15)
for container in tv_movie.containers:
  tv_movie.bar_label(container)

df_clean.date_added.dt.year.count()

#Let's check how many countries have produced a TV Show for Netlix
len(df_tv.groupby('country').count().index)

# Considering there are too many countries, we will limit our study to just the top 10 countries.
sort_order = df_tv.groupby('country').count().sort_values(by = 'show_id',ascending=False)[0:10].index
df_tv_c = df_tv[df_tv['country'].isin(sort_order)]
base_color = base_color = sns.color_palette()[0]
plt.figure(figsize=[20,10])
tv_c = sns.countplot(x='country',data=df_tv_c,order=sort_order, color = base_color)
tv_c.set_title("Number of Netflix's TV Shows produced by Country",fontsize = 20)
tv_c.set_xlabel('Country',fontsize = 15)
tv_c.set_ylabel('Number of TV Shows',fontsize = 15)
for container in tv_c.containers:
    tv_c.bar_label(container)

plt.figure(figsize=[20,10])
order1 = df_tv.groupby('listed_in1').count().sort_values(by = 'show_id',ascending=False)[0:10].index
df_tv_f = df_tv[df_tv['listed_in1'].isin(order1)]
order2 = df_tv_f.groupby('country').count().sort_values(by = 'show_id',ascending=False)[0:10].index
df_tv_f = df_tv_f[df_tv_f['country'].isin(order2)]
base_color = sns.color_palette('coolwarm',n_colors=5)
a=df_tv.date_added.dt.year
tv_g = sns.countplot(data=df_tv_f,x='country',hue='listed_in1', palette=base_color, order=order2)
tv_g.set_xlabel('Country',fontsize = 15)
tv_g.set_ylabel('Number of TV Shows',fontsize = 15)
tv_g.set_title("Relationship between Netflix TV Show Genres and Countries in which these were produced",fontsize = 20)
plt.legend(title = 'Genre', loc = 'upper right')

#In this section we would see the relationship between Netflix adding TV show to their catalog and their respective release date
plt.figure(figsize=[20,15])
bins=np.arange(1924,2025,4)
plt.subplot(2,1,1)
tv_rd = plt.hist2d(data=df_tv,x='release_year',y=df_tv.date_added.dt.year, bins=33)
plt.xticks(np.arange(1924,2022,4));
plt.yticks(np.arange(2008,2022,1));
plt.xlabel('TV show release year',fontsize = 15)
plt.ylabel('Year TV Show was added to Netflix',fontsize = 15)
plt.title("Relationship between TV show's release year and year added to the platform (1924 - 2021)",fontsize = 20)
plt.colorbar(label = 'Number of TV Shows')

plt.subplot(2,1,2)
ry_f = df_tv.release_year>2007
da_f = df_tv.date_added.dt.year>2008
df_tv_f = df_tv[ry_f][da_f]
tv_rd1 = plt.hist2d(data=df_tv_f,x='release_year',y=df_tv_f.date_added.dt.year, bins=33)
plt.xticks(np.arange(2008,2022,1));
plt.yticks(np.arange(2013,2022,1));
plt.xlabel('TV show release year',fontsize = 15)
plt.ylabel('Year TV Show was added to Netflix',fontsize = 15)
plt.title("Relationship between TV show's release year and year added to the platform (2001 - 2021)",fontsize = 20)
plt.colorbar(label = 'Number of TV Shows')

plt.figure(figsize=[20,10])
order = ['TV-Y', 'TV-Y7', ' TV-Y7 FV', 'TV-G', 'TV-PG', 'TV-14', 'TV-MA']
base_color = base_color = sns.color_palette()[0]
a=df_tv.date_added.dt.year
tv_g = sns.countplot(data=df_tv,x='rating',hue=a, order=order, color=base_color)
tv_g.set_xlabel('TV Show Classifications',fontsize = 15)
tv_g.set_ylabel('Number of TV Shows',fontsize = 15)
tv_g.set_title("Relationship between Top 10 TV Show classification on Netflix and year added to the platform",fontsize = 20)
plt.legend(title = 'Year added to Netlix',)

plt.figure(figsize=[35,30])
plt.subplot(4,1,1)

base_color = base_color = sns.color_palette()[0]
sort_order = df_tv.groupby('listed_in1').count().sort_values(by = 'show_id',ascending=False)[0:10].index
df_tv_g = df_tv[df_tv['listed_in1'].isin(sort_order)]
tv_g = sns.countplot(data=df_tv_g,x='listed_in1',hue=df_tv_g.date_added.dt.year, color=base_color)
tv_g.set_xlabel('TV Show Genre',fontsize = 15)
tv_g.set_ylabel('Number of TV Shows',fontsize = 15)
tv_g.set_title("Relationship between Top 10 TV Show Genres on Netflix and year added to the platform",fontsize = 20)
plt.legend(title = 'Year added to Netlix')


plt.subplot(4,1,2)

base_color = base_color = sns.color_palette()[0]
sort_order = df_tv.groupby('listed_in2').count().sort_values(by = 'show_id',ascending=False)[0:10].index
df_tv_g = df_tv[df_tv['listed_in2'].isin(sort_order)]
tv_g1 = sns.countplot(data=df_tv_g,x='listed_in2',hue=df_tv_g.date_added.dt.year, color=base_color)
tv_g1.set_xlabel('TV Show Secondary Genre',fontsize = 15)
tv_g1.set_ylabel('Number of TV Shows',fontsize = 15)
tv_g1.set_title("Relationship between Top 10 TV Show secondary Genres on Netflix and year added to the platform",fontsize = 20)
plt.legend(title = 'Year added to Netlix')

plt.subplot(4,1,3)

base_color = base_color = sns.color_palette()[0]
sort_order = df_tv.groupby('listed_in3').count().sort_values(by = 'show_id',ascending=False)[0:10].index
df_tv_g = df_tv[df_tv['listed_in3'].isin(sort_order)]
tv_g3 = sns.countplot(data=df_tv_g,x='listed_in3',hue=df_tv_g.date_added.dt.year, color=base_color)
tv_g3.set_xlabel('TV Show Secondary Genre',fontsize = 15)
tv_g3.set_ylabel('Number of TV Shows',fontsize = 15)
tv_g3.set_title("Relationship between Top 10 TV Show third Genres on Netflix and year added to the platform",fontsize = 20)
plt.legend(title = 'Year added to Netlix', loc='upper right')

plt.subplot(4,1,4)
df_tv_g1 = df_tv.listed_in1=='International TV Shows'
df_tv_g1 = df_tv[df_tv_g1]
base_color = base_color = sns.color_palette()[0]
sort_order = df_tv_g1.groupby('listed_in2').count().sort_values(by = 'show_id',ascending=False)[0:10].index
df_tv_g1 = df_tv[df_tv['listed_in2'].isin(sort_order)]
tv_g4 = sns.countplot(data=df_tv_g1,x='listed_in2',hue=df_tv_g1.date_added.dt.year, color=base_color)
tv_g4.set_xlabel('TV Show Secondary Genre',fontsize = 15)
tv_g4.set_ylabel('Number of TV Shows',fontsize = 15)
tv_g4.set_title("Secondary genre for International TV Shows on Netflix",fontsize = 20)
plt.legend(title = 'Year added to Netlix', loc='upper right')

#In this section we would see the relationship between Netflix adding TV show to their catalog and their respective release date
plt.figure(figsize=[20,15])
plt.subplot(2,1,1)
da_f = df_tv.release_year>2007
df_tv_f = df_tv[da_f]
tv_rd = plt.hist2d(data=df_tv_f,x='release_year',y='duration_seasons')
plt.xticks(np.arange(2008,2022,4));
plt.yticks(np.arange(1,17,1));
plt.xlabel('TV show release year',fontsize = 15)
plt.ylabel('Seasons',fontsize = 15)
plt.title("Relationship between TV shows length and their release year (2008 - 2021)",fontsize = 20)
plt.colorbar(label = 'Number of TV Shows')

plt.subplot(2,1,2)
da_f = df_tv.date_added.dt.year>2007
df_tv_f = df_tv[da_f]
tv_rd1 = plt.hist2d(data=df_tv_f,x=df_tv_f.date_added.dt.year,y='duration_seasons')
plt.xticks(np.arange(2008,2022,1));
plt.yticks(np.arange(1,17,1));
plt.xlabel('Year TV show was added to the platform',fontsize = 15)
plt.ylabel('Seasons',fontsize = 15)
plt.title("Relationship between TV shows length and year added to the platform (2008 - 2021)",fontsize = 20)
plt.colorbar(label = 'Number of TV Shows')

# Considering there are too many countries, we will limit our study to just the top 10 countries.
sort_order = df_movie.groupby('country').count().sort_values(by = 'show_id',ascending=False)[0:10].index
df_movie_c = df_movie[df_movie['country'].isin(sort_order)]
base_color = base_color = sns.color_palette()[0]
plt.figure(figsize=[20,10])
movie_c = sns.countplot(x='country',data=df_movie_c,order=sort_order, color = base_color)
movie_c.set_title("Number of Netflix's Movies produced by Country",fontsize = 20)
movie_c.set_xlabel('Country',fontsize = 15)
movie_c.set_ylabel('Number of Movies',fontsize = 15)
for container in movie_c.containers:
    movie_c.bar_label(container)

plt.figure(figsize=[20,10])
order1 = df_movie.groupby('listed_in1').count().sort_values(by = 'show_id',ascending=False)[0:10].index
df_movie_f = df_movie[df_movie['listed_in1'].isin(order1)]
order2 = df_movie_f.groupby('country').count().sort_values(by = 'show_id',ascending=False)[0:10].index
df_movie_f = df_movie_f[df_movie_f['country'].isin(order2)]
base_color = sns.color_palette('coolwarm',n_colors=5)
a=df_movie.date_added.dt.year
tv_g = sns.countplot(data=df_movie_f,x='country',hue='listed_in1', palette=base_color, order=order2)
tv_g.set_xlabel('Country',fontsize = 15)
tv_g.set_ylabel('Number of Movies',fontsize = 15)
tv_g.set_title("Relationship between Movie Genres and Countries in which these were produced",fontsize = 20)
plt.legend(title = 'Genre',)

#In this section we would see the relationship between Netflix adding Movie to their catalog and their respective release date
plt.figure(figsize=[20,15])
bins=np.arange(1943,2025,4)
plt.subplot(2,1,1)
movie_rd = plt.hist2d(data=df_movie,x='release_year',y=df_movie.date_added.dt.year, bins=33)
plt.xticks(np.arange(1943,2022,4));
plt.yticks(np.arange(2008,2022,1));
plt.xlabel('Movie release year',fontsize = 15)
plt.ylabel('Year Movie was added to Netflix',fontsize = 15)
plt.title("Relationship between Movies release year and year added to the platform (1924 - 2021)",fontsize = 20)
plt.colorbar(label = 'Number of Movies')

plt.subplot(2,1,2)
ry_f = df_movie.release_year>2000
da_f = df_movie.date_added.dt.year>2011
df_movie_f = df_movie[ry_f][da_f]
movie_rd1 = plt.hist2d(data=df_movie_f,x='release_year',y=df_movie_f.date_added.dt.year, bins=33)
plt.xticks(np.arange(2001,2022,1));
plt.yticks(np.arange(2012,2022,1));
plt.xlabel('Movie release year',fontsize = 15)
plt.ylabel('Year Movie was added to Netflix',fontsize = 15)
plt.title("Relationship between Movies release year and year added to the platform (2001 - 2021)",fontsize = 20)
plt.colorbar(label = 'Number of Movies')

plt.figure(figsize=[20,10])
order = ['G', 'PG', ' PG-13', 'R', 'UR', 'NR', 'TV-Y', 'TV-Y7', ' TV-Y7-FV', 'TV-G', 'TV-PG', 'TV-14', 'TV-MA', 'NC-17']
base_color = base_color = sns.color_palette()[0]
a=df_movie.date_added.dt.year
movie_g = sns.countplot(data=df_movie,x='rating',hue=a,order=order, color=base_color)
movie_g.set_xlabel('Movie Classifications',fontsize = 15)
movie_g.set_ylabel('Number of Movies',fontsize = 15)
movie_g.set_title("Relationship between Movie classifications on Netflix and the year added to the platform",fontsize = 20)
plt.legend(title = 'Year added to Netlix',)

plt.figure(figsize=[25,20])
plt.subplot(3,1,1)

base_color = base_color = sns.color_palette()[0]
sort_order = df_movie.groupby('listed_in1').count().sort_values(by = 'show_id',ascending=False)[0:10].index
df_movie_g = df_movie[df_movie['listed_in1'].isin(sort_order)]
movie_g = sns.countplot(data=df_movie_g,x='listed_in1',hue=df_movie_g.date_added.dt.year, color=base_color)
movie_g.set_xlabel('Movie Genre',fontsize = 15)
movie_g.set_ylabel('Number of Movies',fontsize = 15)
movie_g.set_title("Relationship between Top 10 Movie Genres on Netflix and year added to the platform",fontsize = 20)
plt.legend(title = 'Year added to Netlix')

plt.subplot(3,1,2)

base_color = base_color = sns.color_palette()[0]
sort_order = df_movie.groupby('listed_in2').count().sort_values(by = 'show_id',ascending=False)[0:10].index
df_movie_g = df_movie[df_movie['listed_in2'].isin(sort_order)]
movie_g1 = sns.countplot(data=df_movie_g,x='listed_in2',hue=df_movie_g.date_added.dt.year, color=base_color)
movie_g1.set_xlabel('Movie Secondary Genre',fontsize = 15)
movie_g1.set_ylabel('Number of Movies',fontsize = 15)
movie_g1.set_title("Relationship between Top 10 Movie secondary Genres on Netflix and year added to the platform",fontsize = 20)
plt.legend(title = 'Year added to Netlix')

plt.subplot(3,1,3)

base_color = base_color = sns.color_palette()[0]
sort_order = df_movie.groupby('listed_in3').count().sort_values(by = 'show_id',ascending=False)[0:10].index
df_movie_g = df_movie[df_movie['listed_in3'].isin(sort_order)]
movie_g3 = sns.countplot(data=df_movie_g,x='listed_in3',hue=df_movie_g.date_added.dt.year, color=base_color)
movie_g3.set_xlabel('Movie Secondary Genre',fontsize = 15)
movie_g3.set_ylabel('Number of Movies',fontsize = 15)
movie_g3.set_title("Relationship between Top 10 Movie third Genres on Netflix and year added to the platform",fontsize = 20)
plt.legend(title = 'Year added to Netlix')

#In this section we would see the relationship between Netflix adding movie to their catalog and their respective release date
plt.figure(figsize=[20,15])
plt.subplot(2,1,1)
da_f = df_movie.release_year>2007
df_movie_f = df_movie[da_f]
movie_rd = plt.hist2d(data=df_movie_f,x='release_year',y='duration_minutes')
plt.xticks(np.arange(2008,2022,4));
plt.yticks(np.arange(0,316,15));
plt.xlabel('movie release year',fontsize = 15)
plt.ylabel('length (minutes)',fontsize = 15)
plt.title("Relationship between movie length and release year (2008 - 2021)",fontsize = 20)
plt.colorbar(label = 'Number of movie ')

plt.subplot(2,1,2)
da_f = df_movie.date_added.dt.year>2007
df_movie_f = df_movie[da_f]
movie_rd1 = plt.hist2d(data=df_movie_f,x=df_movie_f.date_added.dt.year,y='duration_minutes')
plt.xticks(np.arange(2008,2022,1));
plt.yticks(np.arange(0,316,15));
plt.xlabel('Year in which the movie was added to the platform',fontsize = 15)
plt.ylabel('length (minutes)',fontsize = 15)
plt.title("Relationship between movie length and year added to the platform (2008 - 2021)",fontsize = 20)
plt.colorbar(label = 'Number of movie ')

